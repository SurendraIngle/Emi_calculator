{"ast":null,"code":"import React, { useState } from 'react';\n\n// const RangeSlider = ({ min, max, step, initialValue, label,sign,onChange }) => {\n//   const [value, setValue] = useState(initialValue || min);\n//   const [inputValue, setInputValue] = useState(initialValue || min);\n\n//   const handleSliderChange = (e) => {\n//   //  console.log(\"target\", e.target.value);\n//     const newValue = parseFloat(e.target.value);\n//     setValue(newValue);\n//     setInputValue(newValue);\n//     if (onChange) {\n//    //   console.log(\"handleSliderChange\", newValue);\n//       onChange(newValue); // Call the callback with the new value\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     const newValue = parseFloat(e.target.value);\n//     setInputValue(newValue);\n//     setValue(newValue);\n//     if (onChange) {\n//       onChange(newValue); // Call the callback with the new value\n//     }\n//   };\n\n//   const handleInputBlur = () => {\n//   //  console.log(\"inputValue\", inputValue);\n//     let newValue = parseFloat(inputValue);\n\n//     if (isNaN(newValue)) {\n//       newValue = value;\n//     } else {\n//       newValue = Math.max(min, newValue);\n//     }\n\n//     setValue(newValue);\n//     setInputValue(newValue);\n//   };\n\n//   return (\n//     <div style={{ width: \"100%\", padding: \"20px\" }}>\n//       <div\n//         style={{\n//           display: \"flex\",\n//           justifyContent: \"space-between\",\n//           marginBottom: \"10px\",\n//         }}\n//       >\n//         <label style={{ fontWeight: \"bold\" }}>{label}</label>\n//         <input\n//           type=\"number\"\n//           value={inputValue}\n//           step={step}\n//           onChange={handleInputChange}\n//           onBlur={handleInputBlur}\n//           style={{\n//             padding: \"5px\",\n//             width: \"120px\",\n//             fontSize: \"16px\",\n//             borderRadius: \"4px\",\n//             border: \"1px solid #ccc\",\n//             textAlign: \"right\",\n//             marginRight: \"20%\",\n//           }}\n//         />\n//       </div>\n//       <div style={{ width: \"80%\", position: \"relative\" }}>\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             top: \"-35px\",\n//             left: `${((value - min) / (max - min)) * 100}%`,\n//             transform: \"translateX(-50%)\",\n//             backgroundColor: \"#f5f5f5\",\n//             borderRadius: \"8px\",\n//             padding: \"5px 10px\",\n//             boxShadow: \"0 2px 5px rgba(0, 0, 0, 0.1)\",\n//             fontWeight: \"bold\",\n//           }}\n//         >\n//           {value.toLocaleString()} {sign}\n//         </div>\n//         <input\n//           type=\"range\"\n//           min={min}\n//           max={max}\n//           step={step}\n//           value={value}\n//           onChange={handleSliderChange}\n//           style={{ width: \"100%\" }}\n//         />\n//         <div\n//           style={{\n//             display: \"flex\",\n//             justifyContent: \"space-between\",\n//             marginTop: \"8px\",\n//           }}\n//         >\n//           <span>{min.toLocaleString()} {sign}</span>\n//           <span>{max.toLocaleString()} {sign}</span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default RangeSlider;","map":{"version":3,"names":["React","useState"],"sources":["/Users/surendraingle/Documents/React/emi-calculator/src/RangeSlider.js"],"sourcesContent":["import React, { useState } from 'react';\n\n\n// const RangeSlider = ({ min, max, step, initialValue, label,sign,onChange }) => {\n//   const [value, setValue] = useState(initialValue || min);\n//   const [inputValue, setInputValue] = useState(initialValue || min);\n\n//   const handleSliderChange = (e) => {\n//   //  console.log(\"target\", e.target.value);\n//     const newValue = parseFloat(e.target.value);\n//     setValue(newValue);\n//     setInputValue(newValue);\n//     if (onChange) {\n//    //   console.log(\"handleSliderChange\", newValue);\n//       onChange(newValue); // Call the callback with the new value\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     const newValue = parseFloat(e.target.value);\n//     setInputValue(newValue);\n//     setValue(newValue);\n//     if (onChange) {\n//       onChange(newValue); // Call the callback with the new value\n//     }\n//   };\n\n//   const handleInputBlur = () => {\n//   //  console.log(\"inputValue\", inputValue);\n//     let newValue = parseFloat(inputValue);\n\n//     if (isNaN(newValue)) {\n//       newValue = value;\n//     } else {\n//       newValue = Math.max(min, newValue);\n//     }\n\n//     setValue(newValue);\n//     setInputValue(newValue);\n//   };\n\n//   return (\n//     <div style={{ width: \"100%\", padding: \"20px\" }}>\n//       <div\n//         style={{\n//           display: \"flex\",\n//           justifyContent: \"space-between\",\n//           marginBottom: \"10px\",\n//         }}\n//       >\n//         <label style={{ fontWeight: \"bold\" }}>{label}</label>\n//         <input\n//           type=\"number\"\n//           value={inputValue}\n//           step={step}\n//           onChange={handleInputChange}\n//           onBlur={handleInputBlur}\n//           style={{\n//             padding: \"5px\",\n//             width: \"120px\",\n//             fontSize: \"16px\",\n//             borderRadius: \"4px\",\n//             border: \"1px solid #ccc\",\n//             textAlign: \"right\",\n//             marginRight: \"20%\",\n//           }}\n//         />\n//       </div>\n//       <div style={{ width: \"80%\", position: \"relative\" }}>\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             top: \"-35px\",\n//             left: `${((value - min) / (max - min)) * 100}%`,\n//             transform: \"translateX(-50%)\",\n//             backgroundColor: \"#f5f5f5\",\n//             borderRadius: \"8px\",\n//             padding: \"5px 10px\",\n//             boxShadow: \"0 2px 5px rgba(0, 0, 0, 0.1)\",\n//             fontWeight: \"bold\",\n//           }}\n//         >\n//           {value.toLocaleString()} {sign}\n//         </div>\n//         <input\n//           type=\"range\"\n//           min={min}\n//           max={max}\n//           step={step}\n//           value={value}\n//           onChange={handleSliderChange}\n//           style={{ width: \"100%\" }}\n//         />\n//         <div\n//           style={{\n//             display: \"flex\",\n//             justifyContent: \"space-between\",\n//             marginTop: \"8px\",\n//           }}\n//         >\n//           <span>{min.toLocaleString()} {sign}</span>\n//           <span>{max.toLocaleString()} {sign}</span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default RangeSlider;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAGvignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}