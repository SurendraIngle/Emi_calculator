{"ast":null,"code":"var _jsxFileName = \"/Users/surendraingle/Documents/React/emi-calculator/src/RangeSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Slider, Typography, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RangeSlider = ({\n  min,\n  max,\n  step,\n  initialValue\n}) => {\n  _s();\n  const [value, setValue] = useState(initialValue || min);\n  const [inputValue, setInputValue] = useState(initialValue || min);\n  useEffect(() => {\n    // Ensure initial value is valid\n    const validInitialValue = Math.max(min, Math.min(max, roundToNearestMultipleOf10(initialValue || min)));\n    setValue(validInitialValue);\n    setInputValue(validInitialValue);\n  }, [min, max, initialValue]);\n  const roundToNearestMultipleOf10 = num => {\n    return Math.round(num / 10) * 10;\n  };\n  const handleSliderChange = e => {\n    const newValue = parseInt(e.target.value, 10);\n    setValue(newValue);\n    setInputValue(newValue);\n  };\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleInputBlur = () => {\n    let newValue = parseInt(inputValue, 10);\n    if (isNaN(newValue)) {\n      newValue = value;\n    } else {\n      newValue = Math.max(min, Math.min(max, roundToNearestMultipleOf10(newValue)));\n    }\n    setValue(newValue);\n    setInputValue(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: min,\n      max: max,\n      step: step,\n      value: value,\n      onChange: handleSliderChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: inputValue,\n      step: step,\n      onChange: handleInputChange,\n      onBlur: handleInputBlur,\n      style: {\n        marginLeft: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginTop: '10px',\n        width: '100px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"\\u20B950,000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"\\u20B91,00,00,000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n// export default RangeSlider;\n// import React, { useState, useEffect } from 'react';\n// import { Box, Typography, Slider, InputBase } from '@mui/material';\n// import { styled } from '@mui/material/styles';\n\n// const RangeSlider = ({ min, max, step, initialValue }) => {\n//   const [value, setValue] = useState(initialValue || min);\n//   const [inputValue, setInputValue] = useState(initialValue || min);\n\n//   useEffect(() => {\n//     // Ensure initial value is valid\n//     const validInitialValue = Math.max(min, Math.min(max, roundToNearestMultipleOf10(initialValue || min)));\n//     setValue(validInitialValue);\n//     setInputValue(validInitialValue);\n//   }, [min, max, initialValue]);\n\n//   const roundToNearestMultipleOf10 = (num) => {\n//     return Math.round(num / 10) * 10;\n//   };\n\n//   const handleSliderChange = (e, newValue) => {\n//     setValue(newValue);\n//     setInputValue(newValue);\n//   };\n\n//   const handleInputChange = (e) => {\n//     setInputValue(e.target.value);\n//   };\n\n//   const handleInputBlur = () => {\n//     let newValue = parseInt(inputValue, 10);\n\n//     if (isNaN(newValue)) {\n//       newValue = value;\n//     } else {\n//       newValue = Math.max(min, Math.min(max, roundToNearestMultipleOf10(newValue)));\n//     }\n\n//     setValue(newValue);\n//     setInputValue(newValue);\n//   };\n\n//   const SliderStyled = styled(Slider)({\n//     color: '#b1421c', // Darker red color for the slider track and thumb\n//     height: 8,\n//     '& .MuiSlider-thumb': {\n//       height: 24,\n//       width: 24,\n//       backgroundColor: '#b1421c', // Thumb color\n//       border: '2px solid currentColor',\n//       '&:hover': {\n//         boxShadow: '0 0 0 8px rgba(177, 66, 28, 0.16)', // Slightly increase the shadow effect\n//       },\n//     },\n//     '& .MuiSlider-track': {\n//       border: 'none',\n//     },\n//     '& .MuiSlider-rail': {\n//       opacity: 0.5,\n//       backgroundColor: '#bfbfbf',\n//     },\n//   });\n\n//   const InputStyled = styled(InputBase)(({ theme }) => ({\n//     fontSize: '24px', // Larger font size for better visibility\n//     fontWeight: 'bold',\n//     textAlign: 'center',\n//     backgroundColor: '#f2f2f2', // Light grey background\n//     padding: '8px 16px',\n//     borderRadius: '12px',\n//     border: `1px solid ${theme.palette.divider}`,\n//   }));\n\n//   return (\n//     <Box sx={{ width: 400, padding: '20px 0' }}>\n//       <Typography variant=\"body1\" sx={{ fontWeight: 'bold', marginBottom: '10px' }}>\n//         Loan Amount\n//       </Typography>\n//       <InputStyled\n//         type=\"text\"\n//         value={`₹${parseInt(inputValue, 10).toLocaleString()}`}\n//         onChange={handleInputChange}\n//         onBlur={handleInputBlur}\n//         sx={{ marginBottom: '20px', display: 'block', width: '100%' }}\n//       />\n//       <SliderStyled\n//         min={min}\n//         max={max}\n//         step={step}\n//         value={value}\n//         onChange={handleSliderChange}\n//         sx={{ marginBottom: '10px' }}\n//       />\n//       <Box sx={{ display: 'flex', justifyContent: 'space-between', marginTop: '10px' }}>\n//         <Typography variant=\"body1\">₹50,000</Typography>\n//         <Typography variant=\"body1\">₹50,00,000</Typography>\n//       </Box>\n//     </Box>\n//   );\n// };\n_s(RangeSlider, \"FYS5M5iLNOrH0VdiMZ8sqUpRMjk=\");\n_c = RangeSlider;\nvar _c;\n$RefreshReg$(_c, \"RangeSlider\");","map":{"version":3,"names":["React","useState","useEffect","Slider","Typography","Box","jsxDEV","_jsxDEV","RangeSlider","min","max","step","initialValue","_s","value","setValue","inputValue","setInputValue","validInitialValue","Math","roundToNearestMultipleOf10","num","round","handleSliderChange","e","newValue","parseInt","target","handleInputChange","handleInputBlur","isNaN","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onBlur","style","marginLeft","sx","display","justifyContent","marginTop","width","variant","_c","$RefreshReg$"],"sources":["/Users/surendraingle/Documents/React/emi-calculator/src/RangeSlider.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Slider, Typography, Box } from '@mui/material';\n\nconst RangeSlider = ({ min, max, step, initialValue }) => {\n  const [value, setValue] = useState(initialValue || min);\n  const [inputValue, setInputValue] = useState(initialValue || min);\n\n  useEffect(() => {\n    // Ensure initial value is valid\n    const validInitialValue = Math.max(min, Math.min(max, roundToNearestMultipleOf10(initialValue || min)));\n    setValue(validInitialValue);\n    setInputValue(validInitialValue);\n  }, [min, max, initialValue]);\n\n  const roundToNearestMultipleOf10 = (num) => {\n    return Math.round(num / 10) * 10;\n  };\n\n  const handleSliderChange = (e) => {\n    const newValue = parseInt(e.target.value, 10);\n    setValue(newValue);\n    setInputValue(newValue);\n  };\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleInputBlur = () => {\n    let newValue = parseInt(inputValue, 10);\n    \n    if (isNaN(newValue)) {\n      newValue = value;\n    } else {\n      newValue = Math.max(min, Math.min(max, roundToNearestMultipleOf10(newValue)));\n    }\n\n    setValue(newValue);\n    setInputValue(newValue);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        step={step}\n        value={value}\n        onChange={handleSliderChange}\n      />\n      <input\n        type=\"number\"\n        value={inputValue}\n        step={step}\n        onChange={handleInputChange}\n        onBlur={handleInputBlur}\n        style={{ marginLeft: '10px' }}\n      />\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', marginTop: '10px',width:'100px' }}>\n        <Typography variant=\"body1\">₹50,000</Typography>\n        <Typography variant=\"body1\">₹1,00,00,000</Typography>\n      </Box>\n    </div>\n  );\n};\n\n// export default RangeSlider;\n// import React, { useState, useEffect } from 'react';\n// import { Box, Typography, Slider, InputBase } from '@mui/material';\n// import { styled } from '@mui/material/styles';\n\n// const RangeSlider = ({ min, max, step, initialValue }) => {\n//   const [value, setValue] = useState(initialValue || min);\n//   const [inputValue, setInputValue] = useState(initialValue || min);\n\n//   useEffect(() => {\n//     // Ensure initial value is valid\n//     const validInitialValue = Math.max(min, Math.min(max, roundToNearestMultipleOf10(initialValue || min)));\n//     setValue(validInitialValue);\n//     setInputValue(validInitialValue);\n//   }, [min, max, initialValue]);\n\n//   const roundToNearestMultipleOf10 = (num) => {\n//     return Math.round(num / 10) * 10;\n//   };\n\n//   const handleSliderChange = (e, newValue) => {\n//     setValue(newValue);\n//     setInputValue(newValue);\n//   };\n\n//   const handleInputChange = (e) => {\n//     setInputValue(e.target.value);\n//   };\n\n//   const handleInputBlur = () => {\n//     let newValue = parseInt(inputValue, 10);\n\n//     if (isNaN(newValue)) {\n//       newValue = value;\n//     } else {\n//       newValue = Math.max(min, Math.min(max, roundToNearestMultipleOf10(newValue)));\n//     }\n\n//     setValue(newValue);\n//     setInputValue(newValue);\n//   };\n\n//   const SliderStyled = styled(Slider)({\n//     color: '#b1421c', // Darker red color for the slider track and thumb\n//     height: 8,\n//     '& .MuiSlider-thumb': {\n//       height: 24,\n//       width: 24,\n//       backgroundColor: '#b1421c', // Thumb color\n//       border: '2px solid currentColor',\n//       '&:hover': {\n//         boxShadow: '0 0 0 8px rgba(177, 66, 28, 0.16)', // Slightly increase the shadow effect\n//       },\n//     },\n//     '& .MuiSlider-track': {\n//       border: 'none',\n//     },\n//     '& .MuiSlider-rail': {\n//       opacity: 0.5,\n//       backgroundColor: '#bfbfbf',\n//     },\n//   });\n\n//   const InputStyled = styled(InputBase)(({ theme }) => ({\n//     fontSize: '24px', // Larger font size for better visibility\n//     fontWeight: 'bold',\n//     textAlign: 'center',\n//     backgroundColor: '#f2f2f2', // Light grey background\n//     padding: '8px 16px',\n//     borderRadius: '12px',\n//     border: `1px solid ${theme.palette.divider}`,\n//   }));\n\n//   return (\n//     <Box sx={{ width: 400, padding: '20px 0' }}>\n//       <Typography variant=\"body1\" sx={{ fontWeight: 'bold', marginBottom: '10px' }}>\n//         Loan Amount\n//       </Typography>\n//       <InputStyled\n//         type=\"text\"\n//         value={`₹${parseInt(inputValue, 10).toLocaleString()}`}\n//         onChange={handleInputChange}\n//         onBlur={handleInputBlur}\n//         sx={{ marginBottom: '20px', display: 'block', width: '100%' }}\n//       />\n//       <SliderStyled\n//         min={min}\n//         max={max}\n//         step={step}\n//         value={value}\n//         onChange={handleSliderChange}\n//         sx={{ marginBottom: '10px' }}\n//       />\n//       <Box sx={{ display: 'flex', justifyContent: 'space-between', marginTop: '10px' }}>\n//         <Typography variant=\"body1\">₹50,000</Typography>\n//         <Typography variant=\"body1\">₹50,00,000</Typography>\n//       </Box>\n//     </Box>\n//   );\n// };\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}