{"ast":null,"code":"var _jsxFileName = \"/Users/surendraingle/Documents/React/emi-calculator/src/RangeSlider.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { Slider, Typography, Box } from '@mui/material';\n\n// const RangeSlider = ({ min, max, step, initialValue }) => {\n//   const [value, setValue] = useState(initialValue || min);\n//   const [inputValue, setInputValue] = useState(initialValue || min);\n\n//   useEffect(() => {\n//     // Ensure initial value is valid\n//     const validInitialValue = Math.max(min, Math.min(max, roundToNearestMultipleOf10(initialValue || min)));\n//     setValue(validInitialValue);\n//     setInputValue(validInitialValue);\n//   }, [min, max, initialValue]);\n\n//   const roundToNearestMultipleOf10 = (num) => {\n//     return Math.round(num / 10) * 10;\n//   };\n\n//   const handleSliderChange = (e) => {\n//     const newValue = parseInt(e.target.value, 10);\n//     setValue(newValue);\n//     setInputValue(newValue);\n//   };\n\n//   const handleInputChange = (e) => {\n//     setInputValue(e.target.value);\n//   };\n\n//   const handleInputBlur = () => {\n//     let newValue = parseInt(inputValue, 10);\n\n//     if (isNaN(newValue)) {\n//       newValue = value;\n//     } else {\n//       newValue = Math.max(min, Math.min(max, roundToNearestMultipleOf10(newValue)));\n//     }\n\n//     setValue(newValue);\n//     setInputValue(newValue);\n//   };\n\n//   return (\n//     <div>\n//       <input\n//         type=\"range\"\n//         min={min}\n//         max={max}\n//         step={step}\n//         value={value}\n//         onChange={handleSliderChange}\n//       />\n//       <input\n//         type=\"number\"\n//         value={inputValue}\n//         step={step}\n//         onChange={handleInputChange}\n//         onBlur={handleInputBlur}\n//         style={{ marginLeft: '10px' }}\n//       />\n//       <Box sx={{ display: 'flex', justifyContent: 'space-between', marginTop: '10px',width:'100px' }}>\n//         <Typography variant=\"body1\">₹50,000</Typography>\n//         <Typography variant=\"body1\">₹1,00,00,000</Typography>\n//       </Box>\n//     </div>\n//   );\n// };\n\n// export default RangeSlider;\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Slider, InputBase } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RangeSlider = ({\n  min,\n  max,\n  step,\n  initialValue\n}) => {\n  _s();\n  const [value, setValue] = useState(initialValue || min);\n  const [inputValue, setInputValue] = useState(initialValue || min);\n  useEffect(() => {\n    // Ensure initial value is valid\n    const validInitialValue = Math.max(min, Math.min(max, roundToNearestMultipleOf10(initialValue || min)));\n    setValue(validInitialValue);\n    setInputValue(validInitialValue);\n  }, [min, max, initialValue]);\n  const roundToNearestMultipleOf10 = num => {\n    return Math.round(num / 10) * 10;\n  };\n  const handleSliderChange = (e, newValue) => {\n    setValue(newValue);\n    setInputValue(newValue);\n  };\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleInputBlur = () => {\n    let newValue = parseInt(inputValue, 10);\n    if (isNaN(newValue)) {\n      newValue = value;\n    } else {\n      newValue = Math.max(min, Math.min(max, roundToNearestMultipleOf10(newValue)));\n    }\n    setValue(newValue);\n    setInputValue(newValue);\n  };\n  const SliderStyled = styled(Slider)({\n    color: '#b1421c',\n    // Darker red color for the slider track and thumb\n    height: 8,\n    '& .MuiSlider-thumb': {\n      height: 24,\n      width: 24,\n      backgroundColor: '#b1421c',\n      // Thumb color\n      border: '2px solid currentColor',\n      '&:hover': {\n        boxShadow: '0 0 0 8px rgba(177, 66, 28, 0.16)' // Slightly increase the shadow effect\n      }\n    },\n    '& .MuiSlider-track': {\n      border: 'none'\n    },\n    '& .MuiSlider-rail': {\n      opacity: 0.5,\n      backgroundColor: '#bfbfbf'\n    }\n  });\n  const InputStyled = styled(InputBase)(({\n    theme\n  }) => ({\n    fontSize: '24px',\n    // Larger font size for better visibility\n    fontWeight: 'bold',\n    textAlign: 'center',\n    backgroundColor: '#f2f2f2',\n    // Light grey background\n    padding: '8px 16px',\n    borderRadius: '12px',\n    border: `1px solid ${theme.palette.divider}`\n  }));\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: 400,\n      padding: '20px 0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        fontWeight: 'bold',\n        marginBottom: '10px'\n      },\n      children: \"Loan Amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputStyled, {\n      type: \"text\",\n      value: `₹${parseInt(inputValue, 10).toLocaleString()}`,\n      onChange: handleInputChange,\n      onBlur: handleInputBlur,\n      sx: {\n        marginBottom: '20px',\n        display: 'block',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SliderStyled, {\n      min: min,\n      max: max,\n      step: step,\n      value: value,\n      onChange: handleSliderChange,\n      sx: {\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"\\u20B950,000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"\\u20B950,00,000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(RangeSlider, \"FYS5M5iLNOrH0VdiMZ8sqUpRMjk=\");\n_c = RangeSlider;\nexport default RangeSlider;\nvar _c;\n$RefreshReg$(_c, \"RangeSlider\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Slider","InputBase","styled","jsxDEV","_jsxDEV","RangeSlider","min","max","step","initialValue","_s","value","setValue","inputValue","setInputValue","validInitialValue","Math","roundToNearestMultipleOf10","num","round","handleSliderChange","e","newValue","handleInputChange","target","handleInputBlur","parseInt","isNaN","SliderStyled","color","height","width","backgroundColor","border","boxShadow","opacity","InputStyled","theme","fontSize","fontWeight","textAlign","padding","borderRadius","palette","divider","sx","children","variant","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","toLocaleString","onChange","onBlur","display","justifyContent","marginTop","_c","$RefreshReg$"],"sources":["/Users/surendraingle/Documents/React/emi-calculator/src/RangeSlider.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { Slider, Typography, Box } from '@mui/material';\n\n// const RangeSlider = ({ min, max, step, initialValue }) => {\n//   const [value, setValue] = useState(initialValue || min);\n//   const [inputValue, setInputValue] = useState(initialValue || min);\n\n//   useEffect(() => {\n//     // Ensure initial value is valid\n//     const validInitialValue = Math.max(min, Math.min(max, roundToNearestMultipleOf10(initialValue || min)));\n//     setValue(validInitialValue);\n//     setInputValue(validInitialValue);\n//   }, [min, max, initialValue]);\n\n//   const roundToNearestMultipleOf10 = (num) => {\n//     return Math.round(num / 10) * 10;\n//   };\n\n//   const handleSliderChange = (e) => {\n//     const newValue = parseInt(e.target.value, 10);\n//     setValue(newValue);\n//     setInputValue(newValue);\n//   };\n\n//   const handleInputChange = (e) => {\n//     setInputValue(e.target.value);\n//   };\n\n//   const handleInputBlur = () => {\n//     let newValue = parseInt(inputValue, 10);\n    \n//     if (isNaN(newValue)) {\n//       newValue = value;\n//     } else {\n//       newValue = Math.max(min, Math.min(max, roundToNearestMultipleOf10(newValue)));\n//     }\n\n//     setValue(newValue);\n//     setInputValue(newValue);\n//   };\n\n//   return (\n//     <div>\n//       <input\n//         type=\"range\"\n//         min={min}\n//         max={max}\n//         step={step}\n//         value={value}\n//         onChange={handleSliderChange}\n//       />\n//       <input\n//         type=\"number\"\n//         value={inputValue}\n//         step={step}\n//         onChange={handleInputChange}\n//         onBlur={handleInputBlur}\n//         style={{ marginLeft: '10px' }}\n//       />\n//       <Box sx={{ display: 'flex', justifyContent: 'space-between', marginTop: '10px',width:'100px' }}>\n//         <Typography variant=\"body1\">₹50,000</Typography>\n//         <Typography variant=\"body1\">₹1,00,00,000</Typography>\n//       </Box>\n//     </div>\n//   );\n// };\n\n// export default RangeSlider;\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Slider, InputBase } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst RangeSlider = ({ min, max, step, initialValue }) => {\n  const [value, setValue] = useState(initialValue || min);\n  const [inputValue, setInputValue] = useState(initialValue || min);\n\n  useEffect(() => {\n    // Ensure initial value is valid\n    const validInitialValue = Math.max(min, Math.min(max, roundToNearestMultipleOf10(initialValue || min)));\n    setValue(validInitialValue);\n    setInputValue(validInitialValue);\n  }, [min, max, initialValue]);\n\n  const roundToNearestMultipleOf10 = (num) => {\n    return Math.round(num / 10) * 10;\n  };\n\n  const handleSliderChange = (e, newValue) => {\n    setValue(newValue);\n    setInputValue(newValue);\n  };\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleInputBlur = () => {\n    let newValue = parseInt(inputValue, 10);\n\n    if (isNaN(newValue)) {\n      newValue = value;\n    } else {\n      newValue = Math.max(min, Math.min(max, roundToNearestMultipleOf10(newValue)));\n    }\n\n    setValue(newValue);\n    setInputValue(newValue);\n  };\n\n  const SliderStyled = styled(Slider)({\n    color: '#b1421c', // Darker red color for the slider track and thumb\n    height: 8,\n    '& .MuiSlider-thumb': {\n      height: 24,\n      width: 24,\n      backgroundColor: '#b1421c', // Thumb color\n      border: '2px solid currentColor',\n      '&:hover': {\n        boxShadow: '0 0 0 8px rgba(177, 66, 28, 0.16)', // Slightly increase the shadow effect\n      },\n    },\n    '& .MuiSlider-track': {\n      border: 'none',\n    },\n    '& .MuiSlider-rail': {\n      opacity: 0.5,\n      backgroundColor: '#bfbfbf',\n    },\n  });\n\n  const InputStyled = styled(InputBase)(({ theme }) => ({\n    fontSize: '24px', // Larger font size for better visibility\n    fontWeight: 'bold',\n    textAlign: 'center',\n    backgroundColor: '#f2f2f2', // Light grey background\n    padding: '8px 16px',\n    borderRadius: '12px',\n    border: `1px solid ${theme.palette.divider}`,\n  }));\n\n  return (\n    <Box sx={{ width: 400, padding: '20px 0' }}>\n      <Typography variant=\"body1\" sx={{ fontWeight: 'bold', marginBottom: '10px' }}>\n        Loan Amount\n      </Typography>\n      <InputStyled\n        type=\"text\"\n        value={`₹${parseInt(inputValue, 10).toLocaleString()}`}\n        onChange={handleInputChange}\n        onBlur={handleInputBlur}\n        sx={{ marginBottom: '20px', display: 'block', width: '100%' }}\n      />\n      <SliderStyled\n        min={min}\n        max={max}\n        step={step}\n        value={value}\n        onChange={handleSliderChange}\n        sx={{ marginBottom: '10px' }}\n      />\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', marginTop: '10px' }}>\n        <Typography variant=\"body1\">₹50,000</Typography>\n        <Typography variant=\"body1\">₹50,00,000</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default RangeSlider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}