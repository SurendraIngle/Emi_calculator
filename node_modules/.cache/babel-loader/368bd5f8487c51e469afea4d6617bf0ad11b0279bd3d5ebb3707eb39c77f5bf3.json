{"ast":null,"code":"var _jsxFileName = \"/Users/surendraingle/Documents/React/emi-calculator/src/RangeSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport \"./Sliider.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RangeSlider = ({\n  min,\n  max,\n  step,\n  initialValue,\n  label,\n  sign,\n  onChange\n}) => {\n  _s();\n  const [value, setValue] = useState(initialValue || min);\n  const [inputValue, setInputValue] = useState(initialValue || min);\n  const handleSliderChange = useCallback(e => {\n    const newValue = parseFloat(e.target.value);\n    setValue(newValue);\n    setInputValue(newValue);\n    onChange === null || onChange === void 0 ? void 0 : onChange(newValue);\n  }, [onChange]);\n  const handleInputChange = useCallback(e => {\n    const newValue = parseFloat(e.target.value);\n    setInputValue(newValue);\n    setValue(newValue);\n    onChange === null || onChange === void 0 ? void 0 : onChange(newValue);\n  }, [onChange]);\n  const handleInputBlur = useCallback(() => {\n    const newValue = Math.max(min, parseFloat(inputValue) || value);\n    setValue(newValue);\n    setInputValue(newValue);\n  }, [inputValue, value, min]);\n  const percentage = (value - min) / (max - min) * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"range-slider\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"range-slider__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"range-slider__label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: inputValue,\n        step: step,\n        onChange: handleInputChange,\n        onBlur: handleInputBlur,\n        className: \"range-slider__input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"range-slider__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"range-slider__value\",\n        style: {\n          left: `${percentage}%`\n        },\n        children: [value.toLocaleString(), \" \", sign]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: min,\n        max: max,\n        step: step,\n        value: value,\n        onChange: handleSliderChange,\n        className: \"range-slider__slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"range-slider__limits\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [min.toLocaleString(), \" \", sign]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [max.toLocaleString(), \" \", sign]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(RangeSlider, \"OB0rq8UwIGJeZUZcMc2u/+rA0iM=\");\n_c = RangeSlider;\nexport default RangeSlider;\n\n// const RangeSlider = ({ min, max, step, initialValue, label,sign,onChange }) => {\n//   const [value, setValue] = useState(initialValue || min);\n//   const [inputValue, setInputValue] = useState(initialValue || min);\n\n//   const handleSliderChange = (e) => {\n//   //  console.log(\"target\", e.target.value);\n//     const newValue = parseFloat(e.target.value);\n//     setValue(newValue);\n//     setInputValue(newValue);\n//     if (onChange) {\n//    //   console.log(\"handleSliderChange\", newValue);\n//       onChange(newValue); // Call the callback with the new value\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     const newValue = parseFloat(e.target.value);\n//     setInputValue(newValue);\n//     setValue(newValue);\n//     if (onChange) {\n//       onChange(newValue); // Call the callback with the new value\n//     }\n//   };\n\n//   const handleInputBlur = () => {\n//   //  console.log(\"inputValue\", inputValue);\n//     let newValue = parseFloat(inputValue);\n\n//     if (isNaN(newValue)) {\n//       newValue = value;\n//     } else {\n//       newValue = Math.max(min, newValue);\n//     }\n\n//     setValue(newValue);\n//     setInputValue(newValue);\n//   };\n\n//   return (\n//     <div style={{ width: \"100%\", padding: \"20px\" }}>\n//       <div\n//         style={{\n//           display: \"flex\",\n//           justifyContent: \"space-between\",\n//           marginBottom: \"10px\",\n//         }}\n//       >\n//         <label style={{ fontWeight: \"bold\" }}>{label}</label>\n//         <input\n//           type=\"number\"\n//           value={inputValue}\n//           step={step}\n//           onChange={handleInputChange}\n//           onBlur={handleInputBlur}\n//           style={{\n//             padding: \"5px\",\n//             width: \"120px\",\n//             fontSize: \"16px\",\n//             borderRadius: \"4px\",\n//             border: \"1px solid #ccc\",\n//             textAlign: \"right\",\n//             marginRight: \"20%\",\n//           }}\n//         />\n//       </div>\n//       <div style={{ width: \"80%\", position: \"relative\" }}>\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             top: \"-35px\",\n//             left: `${((value - min) / (max - min)) * 100}%`,\n//             transform: \"translateX(-50%)\",\n//             backgroundColor: \"#f5f5f5\",\n//             borderRadius: \"8px\",\n//             padding: \"5px 10px\",\n//             boxShadow: \"0 2px 5px rgba(0, 0, 0, 0.1)\",\n//             fontWeight: \"bold\",\n//           }}\n//         >\n//           {value.toLocaleString()} {sign}\n//         </div>\n//         <input\n//           type=\"range\"\n//           min={min}\n//           max={max}\n//           step={step}\n//           value={value}\n//           onChange={handleSliderChange}\n//           style={{ width: \"100%\" }}\n//         />\n//         <div\n//           style={{\n//             display: \"flex\",\n//             justifyContent: \"space-between\",\n//             marginTop: \"8px\",\n//           }}\n//         >\n//           <span>{min.toLocaleString()} {sign}</span>\n//           <span>{max.toLocaleString()} {sign}</span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default RangeSlider;\nvar _c;\n$RefreshReg$(_c, \"RangeSlider\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","RangeSlider","min","max","step","initialValue","label","sign","onChange","_s","value","setValue","inputValue","setInputValue","handleSliderChange","e","newValue","parseFloat","target","handleInputChange","handleInputBlur","Math","percentage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onBlur","style","left","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/surendraingle/Documents/React/emi-calculator/src/RangeSlider.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport \"./Sliider.css\";\n\nconst RangeSlider = ({\n  min,\n  max,\n  step,\n  initialValue,\n  label,\n  sign,\n  onChange,\n}) => {\n  const [value, setValue] = useState(initialValue || min);\n  const [inputValue, setInputValue] = useState(initialValue || min);\n\n  const handleSliderChange = useCallback(\n    (e) => {\n      const newValue = parseFloat(e.target.value);\n      setValue(newValue);\n      setInputValue(newValue);\n      onChange?.(newValue);\n    },\n    [onChange]\n  );\n\n  const handleInputChange = useCallback(\n    (e) => {\n      const newValue = parseFloat(e.target.value);\n      setInputValue(newValue);\n      setValue(newValue);\n      onChange?.(newValue);\n    },\n    [onChange]\n  );\n\n  const handleInputBlur = useCallback(() => {\n    const newValue = Math.max(min, parseFloat(inputValue) || value);\n    setValue(newValue);\n    setInputValue(newValue);\n  }, [inputValue, value, min]);\n\n  const percentage = ((value - min) / (max - min)) * 100;\n\n  return (\n    <div className=\"range-slider\">\n      <div className=\"range-slider__header\">\n        <label className=\"range-slider__label\">{label}</label>\n        <input\n          type=\"number\"\n          value={inputValue}\n          step={step}\n          onChange={handleInputChange}\n          onBlur={handleInputBlur}\n          className=\"range-slider__input\"\n        />\n      </div>\n      <div className=\"range-slider__container\">\n        <div className=\"range-slider__value\" style={{ left: `${percentage}%` }}>\n          {value.toLocaleString()} {sign}\n        </div>\n        <input\n          type=\"range\"\n          min={min}\n          max={max}\n          step={step}\n          value={value}\n          onChange={handleSliderChange}\n          className=\"range-slider__slider\"\n        />\n        <div className=\"range-slider__limits\">\n          <span>\n            {min.toLocaleString()} {sign}\n          </span>\n          <span>\n            {max.toLocaleString()} {sign}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RangeSlider;\n\n// const RangeSlider = ({ min, max, step, initialValue, label,sign,onChange }) => {\n//   const [value, setValue] = useState(initialValue || min);\n//   const [inputValue, setInputValue] = useState(initialValue || min);\n\n//   const handleSliderChange = (e) => {\n//   //  console.log(\"target\", e.target.value);\n//     const newValue = parseFloat(e.target.value);\n//     setValue(newValue);\n//     setInputValue(newValue);\n//     if (onChange) {\n//    //   console.log(\"handleSliderChange\", newValue);\n//       onChange(newValue); // Call the callback with the new value\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     const newValue = parseFloat(e.target.value);\n//     setInputValue(newValue);\n//     setValue(newValue);\n//     if (onChange) {\n//       onChange(newValue); // Call the callback with the new value\n//     }\n//   };\n\n//   const handleInputBlur = () => {\n//   //  console.log(\"inputValue\", inputValue);\n//     let newValue = parseFloat(inputValue);\n\n//     if (isNaN(newValue)) {\n//       newValue = value;\n//     } else {\n//       newValue = Math.max(min, newValue);\n//     }\n\n//     setValue(newValue);\n//     setInputValue(newValue);\n//   };\n\n//   return (\n//     <div style={{ width: \"100%\", padding: \"20px\" }}>\n//       <div\n//         style={{\n//           display: \"flex\",\n//           justifyContent: \"space-between\",\n//           marginBottom: \"10px\",\n//         }}\n//       >\n//         <label style={{ fontWeight: \"bold\" }}>{label}</label>\n//         <input\n//           type=\"number\"\n//           value={inputValue}\n//           step={step}\n//           onChange={handleInputChange}\n//           onBlur={handleInputBlur}\n//           style={{\n//             padding: \"5px\",\n//             width: \"120px\",\n//             fontSize: \"16px\",\n//             borderRadius: \"4px\",\n//             border: \"1px solid #ccc\",\n//             textAlign: \"right\",\n//             marginRight: \"20%\",\n//           }}\n//         />\n//       </div>\n//       <div style={{ width: \"80%\", position: \"relative\" }}>\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             top: \"-35px\",\n//             left: `${((value - min) / (max - min)) * 100}%`,\n//             transform: \"translateX(-50%)\",\n//             backgroundColor: \"#f5f5f5\",\n//             borderRadius: \"8px\",\n//             padding: \"5px 10px\",\n//             boxShadow: \"0 2px 5px rgba(0, 0, 0, 0.1)\",\n//             fontWeight: \"bold\",\n//           }}\n//         >\n//           {value.toLocaleString()} {sign}\n//         </div>\n//         <input\n//           type=\"range\"\n//           min={min}\n//           max={max}\n//           step={step}\n//           value={value}\n//           onChange={handleSliderChange}\n//           style={{ width: \"100%\" }}\n//         />\n//         <div\n//           style={{\n//             display: \"flex\",\n//             justifyContent: \"space-between\",\n//             marginTop: \"8px\",\n//           }}\n//         >\n//           <span>{min.toLocaleString()} {sign}</span>\n//           <span>{max.toLocaleString()} {sign}</span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default RangeSlider;\n"],"mappings":"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ACxB,CAAC,eACP5B,OAAA;UAAAwB,QAAA,GACGrB,GAAG,CAAC8B,cAAc,CAAC,CAAC,EAAC,GAAC,EAAC1B,IAAI;QAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CA7EIR,WAAW;AAAAiC,EAAA,GAAXjC,WAAW;AA+EjB,eAAeA,WAAW;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}